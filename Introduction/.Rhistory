manipulate(curve.data(mean, sd),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
library(manipulate)
manipulate(curve.data(mean, sd),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
library(manipulate)
source("https://raw.githubusercontent.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Univariate%20Normal%20Model/plotting_functions.r")
wings <- read.table("http://goo.gl/4lPBG6", header=FALSE)[,1]*0.1
curve(dnorm, from=-4, to=4, ylab="p(x)")
par(mfrow=c(1,4))
curve(dnorm(x, mean=1, sd=1), from=2, to=6, ylab="p(x)", ylim=c(0, 0.6),
main="mean=1, sd=1")
points(wings, jitter(rep(0, 100), factor=0.2))
curve(dnorm(x, mean=4, sd=2), from=2, to=6, ylab="p(x)", ylim=c(0, 0.6),
main="mean=4, sd=2")
points(wings, jitter(rep(0, 100), factor=0.2))
curve(dnorm(x, mean=2, sd=3), from=2, to=6, ylab="p(x)", ylim=c(0, 0.6),
main="mean=2, sd=3")
points(wings, jitter(rep(0, 100), factor=0.2))
curve(dnorm(x, mean=4.5, sd=0.7), from=2, to=6, ylab="p(x)", ylim=c(0, 0.6),
main="mean=4.5, sd=0.7")
points(wings, jitter(rep(0, 100), factor=0.2))
manipulate(curve.data(mean, sd),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.data(mean, sd),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
