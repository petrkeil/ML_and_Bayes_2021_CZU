catepil <- read.table("http://goo.gl/odmkOq", sep="\t", header=TRUE)
catepil <- read.table("http://www.petrkeil.com/wp-content/uploads/2016/01/regression.txt", sep="\t", header=TRUE)
catepil
cancer <- read.table("http://www.petrkeil.com/wp-content/uploads/2016/01/cancer.txt", header=TRUE)
cancer
source("https://raw.githubusercontent.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Linear Regression/linear_regression_part0_functions.r")
source("https://rawgit.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Linear Regression/linear_regression_part0_functions.r")
xy <- read.csv("https://raw.githubusercontent.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Manual_ML_regression/xy_data.csv")
catepil <- read.table("http://www.petrkeil.com/wp-content/uploads/2016/01/regression.txt", sep="\t", header=TRUE)
catepil
objects()
manipulate(
regr.plot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
regr.plot(catepil, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
source('~/Dropbox/Teaching/Bayesian Biostatistics - iDiv 2017/Lectures/GitHub_repository/Linear Regression/linear_regression_part0_functions.r')
manipulate(
regr.plot(catepil, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
regr.plot(catepil, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
regr.plot(catepil, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
regr.plot(x=catepil$tanin, y=catepil$growth, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
regr.plot(x=catepil$tanin, y=catepil$growth, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
catepil$tanin
catepil <- read.table("http://www.petrkeil.com/wp-content/uploads/2016/01/regression.txt", sep="\t", header=TRUE)
catepil
catepil
manipulate(
regr.plot(x=catepil$tanin, y=catepil$growth, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
catepil$tanin
manipulate(
regr.plot(x=catepil$tannin, y=catepil$growth, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
regr.plot(x=catepil$tannin, y=catepil$growth, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
regr.plot(x=catepil$tannin, y=catepil$growth, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
lm(catepil$growth ~ catepil$tannin)
source('~/Dropbox/Teaching/Bayesian Biostatistics - iDiv 2017/Lectures/GitHub_repository/Linear Regression/linear_regression_part0_functions.r')
manipulate(
regr.plot(x=catepil$tannin, y=catepil$growth, a, b, sigma),
a = slider(min=0, max=15, step=0.01, initial=5),
b = slider(min=-5, max=5, step=0.01, initial=-2),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
regr.plot(x=catepil$tannin, y=catepil$growth, a, b, sigma),
a = slider(min=0, max=15, step=0.01, initial=5),
b = slider(min=-5, max=5, step=0.01, initial=-2),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
source('~/Dropbox/Teaching/Bayesian Biostatistics - iDiv 2017/Lectures/GitHub_repository/Linear Regression/linear_regression_part0_functions.r')
manipulate(
regr.plot(x=catepil$tannin, y=catepil$growth, a, b, sigma),
a = slider(min=0, max=15, step=0.01, initial=5),
b = slider(min=-5, max=5, step=0.01, initial=-2),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
neg.LL.function.for.optim <- function(par, dat)
{
x <- dat$x
y <- dat$y
a <- par[1]
b <- par[2]
sd <- par[3]
LL <- dnorm(y, mean=a + b*x, sd=sd, log=TRUE)
neg.LL <- - sum(LL)
return(neg.LL)
}
optim(par=c(a=0, b=0, sd=1),
fn=neg.LL.function.for.optim,
dat=catepil)
neg.LL.function.for.optim <- function(par, dat)
{
x <- dat$tannin
y <- dat$growth
a <- par[1]
b <- par[2]
sd <- par[3]
LL <- dnorm(y, mean=a + b*x, sd=sd, log=TRUE)
neg.LL <- - sum(LL)
return(neg.LL)
}
optim(par=c(a=0, b=0, sd=1),
fn=neg.LL.function.for.optim,
dat=catepil)
catepil <- read.csv("https://rawgit.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Linear%20Regression/catepilar_data.csv")
catepil
catepil <- read.csv("goo.gl/krgehG")
neg.LL.function.for.optim <- function(par, dat)
{
tannin <- dat$tannin
growth <- dat$growth
a <- par[1]
b <- par[2]
sd <- par[3]
# likelihood
mu <- a + b*tannin
LL <- dnorm(growth, mean=mu, sd=sd)
# negative log-likelihood
neg.LL <- - sum(log(LL))
return(neg.LL)
}
neg.LL.function.for.optim <- function(par, dat)
{
tannin <- dat$tannin
growth <- dat$growth
a <- par[1]
b <- par[2]
sd <- par[3]
# likelihood
mu <- a + b*tannin
LL <- dnorm(growth, mean=mu, sd=sd)
# negative log-likelihood
neg.LL <- - sum(log(LL))
return(neg.LL)
}
optim(par=c(a=0, b=0, sigma=1),
fn=neg.LL.function.for.optim,
dat=catepil)
plot(growth~tannin, data=catepil, pch=19)
abline(model.lm)
model.lm <- lm(growth~tannin, data=catepil)
model.lm <- lm(growth~tannin, data=catepil)
model.lm
summary(model.lm)
model.lm <- glm(growth~tannin, data=catepil)
,
plot(growth~tannin, data=catepil, pch=19)
abline(model.lm)
summary(model.lm)
summary(model.lm)
?glm
catepil <- read.csv("https://rawgit.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Linear%20Regression/catepilar_data.csv")
catepil
linreg.data <- list(N=9,
tannin=catepil$tannin,
growth=catepil$growth)
linreg.data
library(R2jags)
cat("
model
{
# priors
a ~ dnorm(0, 0.001) # intercept
b ~ dnorm(0, 0.001) # slope
sigma ~ dunif(0, 100) # standard deviation
tau <- 1/(sigma*sigma) # precision
# likelihood
for(i in 1:N)
{
growth[i] ~ dnorm(mu[i], tau)
mu[i] <- a + b*tannin[i]
}
}
", file="linreg_model.bug")
model.fit <- jags(data=linreg.data,
model.file="linreg_model.bug",
parameters.to.save=c("a", "b", "sigma"),
n.chains=3,
n.iter=2000,
n.burnin=1000)
plot(as.mcmc(model.fit))
model.fit
plot(model.fit)
library(rjags)
cat("
model
{
# priors
a ~ dnorm(0, 0.001)
b ~ dnorm(0, 0.001)
sigma ~ dunif(0, 100)
tau <- 1/(sigma*sigma)
# likelihood
for(i in 1:N)
{
growth[i] ~ dnorm(mu[i], tau)
mu[i] <- a + b*tannin[i]
}
# predictions
for(i in 1:N)
{
prediction[i] ~ dnorm(mu[i], tau)
}
}
", file="linreg_model.bug")
jm <- jags.model(data=linreg.data,
file="linreg_model.bug",
n.chains = 3, n.adapt=1000)
update(jm, n.iter=1000)
params <- c("prediction")
samps <- coda.samples(jm, params, n.iter=1000)
predictions <- summary(samps)$quantiles
params <- c("mu")
samps <- coda.samples(jm, params, n.iter=1000)
mu <- summary(samps)$quantiles
plot(c(0,8), c(0,18), type="n", xlab="tannin", ylab="growth")
points(catepil$tannin, catepil$growth, pch=19)
lines(catepil$tannin, mu[,"50%"], col="red")
lines(catepil$tannin, mu[,"2.5%"], col="red", lty=2)
lines(catepil$tannin, mu[,"97.5%"], col="red", lty=2)
lines(catepil$tannin, predictions[,"2.5%"], lty=3)
lines(catepil$tannin, predictions[,"97.5%"], lty=3)
?jags
